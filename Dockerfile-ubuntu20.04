# Openwrt docker compilation environment Dockerfile.
FROM ubuntu:20.04

LABEL maintainer="Bad Boy <bxad397@gmail.com>"
LABEL description="Openwrt compilation environment"
LABEL version="1.0"

# Set timezone(Asia/Shanghai).
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Changer apt source.
RUN sed -i 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list

# Install and config zh_cn fonts.
RUN apt-get update && \ 
    apt-get upgrade -y && \
    apt-get install -y language-pack-zh-hans fonts-wqy-zenhei

# Changer root and user whoami password.
RUN useradd -m whoami -G sudo -s /bin/bash
RUN echo 'whoami:whoami' | chpasswd
RUN echo 'root:whoami' | chpasswd

# Config Chinese environment.
ENV LANG=zh_CN.UTF-8
ENV LANGUAGE=zh_CN:zh
ENV LC_ALL=zh_CN.UTF-8

# Update fonts cache
RUN fc-cache -f -v

# Make Openwrt make environment.
RUN apt-get install -y sudo bash-completion less ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
    bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
    git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
    libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
    mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-pyelftools python3-setuptools \
    libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
    vim wget xmlto xxd zlib1g-dev uuid-runtime upx git-core libz-dev lib32gcc-s1 zstd libgsl-dev bc

# Config error warning colors.
COPY color-compile.tar.zst /tmp/
RUN tar xf /tmp/color-compile.tar.zst  -C /tmp/
RUN make -C /tmp/color-compile &&make -C /tmp/color-compile install


ENV PATH="${PATH}:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"

# Enable root make openwrt.
ENV FORCE_UNSAFE_CONFIGURE=1

# Config user workspace.
COPY config.sh /tmp/
COPY vimrc  /etc/vim/vimrc.local
COPY bashrc /tmp/
COPY user_bashrc /tmp/
RUN bash /tmp/config.sh
RUN cat /tmp/bashrc >/root/.bashrc
RUN cat /tmp/user_bashrc >/home/whoami/.bashrc
RUN bash /tmp/config.sh

# Clean cache refuse.
RUN apt-get -y clean && \
    apt-get -y autoclean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/tmp/* && \
    rm -rf /tmp/* 

USER whoami
WORKDIR /home/whoami
